// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// APIResource specifies the name of a resource and whether it is
    /// namespaced.
    /// </summary>
    public partial class V1APIResource
    {
        /// <summary>
        /// Initializes a new instance of the V1APIResource class.
        /// </summary>
        public V1APIResource()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1APIResource class.
        /// </summary>
        /// <param name="kind">kind is the kind for the resource (e.g. 'Foo' is
        /// the kind for a resource 'foo')</param>
        /// <param name="name">name is the name of the resource.</param>
        /// <param name="namespaced">namespaced indicates if a resource is
        /// namespaced or not.</param>
        /// <param name="verbs">verbs is a list of supported kube verbs (this
        /// includes get, list, watch, create, update, patch, delete,
        /// deletecollection, and proxy)</param>
        /// <param name="shortNames">shortNames is a list of suggested short
        /// names of the resource.</param>
        public V1APIResource(string kind, string name, bool namespaced, IList<string> verbs, IList<string> shortNames = default(IList<string>))
        {
            Kind = kind;
            Name = name;
            Namespaced = namespaced;
            ShortNames = shortNames;
            Verbs = verbs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets kind is the kind for the resource (e.g. 'Foo' is the
        /// kind for a resource 'foo')
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Gets or sets name is the name of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets namespaced indicates if a resource is namespaced or
        /// not.
        /// </summary>
        [JsonProperty(PropertyName = "namespaced")]
        public bool Namespaced { get; set; }

        /// <summary>
        /// Gets or sets shortNames is a list of suggested short names of the
        /// resource.
        /// </summary>
        [JsonProperty(PropertyName = "shortNames")]
        public IList<string> ShortNames { get; set; }

        /// <summary>
        /// Gets or sets verbs is a list of supported kube verbs (this includes
        /// get, list, watch, create, update, patch, delete, deletecollection,
        /// and proxy)
        /// </summary>
        [JsonProperty(PropertyName = "verbs")]
        public IList<string> Verbs { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Kind == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Kind");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Verbs == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Verbs");
            }
        }
    }
}
